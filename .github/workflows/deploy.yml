name: Deploy Docs

on:
  push:
    branches:
      - master
      - main

permissions:a
  contents: write

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    container:
      image: python:3.13

    services:
      kroki:
        image: yuzutech/kroki
        env:
          KROKI_MERMAID_HOST: mermaid
          KROKI_BPMN_HOST: bpmn
          KROKI_EXCALIDRAW_HOST: excalidraw
        ports:
          - 8000:8000
      mermaid:
        image: yuzutech/kroki-mermaid
      bpmn:
        image: yuzutech/kroki-bpmn
      excalidraw:
        image: yuzutech/kroki-excalidraw

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          sparse-checkout: |
            docs
            includes

      - name: Mark repository safe for git (must run before any git command)
        shell: bash
        run: |
          # Ensure git will allow operations inside the runner workspace.
          # Do this immediately after checkout and before any git remote / log commands.
          git config --global --add safe.directory "${{ github.workspace }}"
          # Sometimes git reports a different working directory; also add the present working directory
          git config --global --add safe.directory "$(pwd)"
          git config --global --list | sed -n '1,200p'

      - name: Ensure origin remote is present and pushable (use GITHUB_TOKEN)
        shell: bash
        run: |
          set -euo pipefail
          # Use the repository variable and GITHUB_TOKEN to construct an authenticated origin.
          # Prefer to keep existing origin if it is already configured.
          if ! git remote get-url origin >/dev/null 2>&1; then
            git remote add origin "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git"
            echo "Added authenticated origin with GITHUB_TOKEN"
          else
            echo "origin exists; showing remote urls"
            git remote -v
          fi

      - name: Configure git user
        shell: bash
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "github-actions"

      - name: Prepare pip/build tools
        shell: bash
        run: |
          set -euo pipefail
          python --version
          python -m pip install --upgrade pip setuptools wheel build

      - name: Install project (from pyproject.toml)
        shell: bash
        run: |
          set -euo pipefail
          # Prefer editable install so local modules/plugins are importable
          python -m pip install -e . || python -m pip install .

      - name: Deploy MkDocs site
        env:
          KROKI_SERVER_URL: http://kroki:8000
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          set -euo pipefail
          if ! command -v mkdocs >/dev/null 2>&1; then
            echo "ERROR: mkdocs not found on PATH. Aborting."
            exit 1
          fi
          mkdocs gh-deploy --force --clean --remote-name origin
