name: Deploy Docs

on:
  push:
    branches:
      - master
      - main

permissions:
  contents: write

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    container:
      image: python:3.13

    services:
      kroki:
        image: yuzutech/kroki
        env:
          KROKI_MERMAID_HOST: mermaid
          KROKI_BPMN_HOST: bpmn
          KROKI_EXCALIDRAW_HOST: excalidraw
        ports:
          - 8000:8000
      mermaid:
        image: yuzutech/kroki-mermaid
      bpmn:
        image: yuzutech/kroki-bpmn
      excalidraw:
        image: yuzutech/kroki-excalidraw

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          sparse-checkout: |
            docs
            includes

      - name: Install project dependencies into container Python (pip from pyproject)
        shell: bash
        run: |
          set -euo pipefail
          echo "Python: $(python --version)"

          # ensure pip and build tools are available
          python -m pip install --upgrade pip setuptools wheel

          # try to install project with docs extras (common pattern)
          echo "Attempting: python -m pip install '.[docs]'"
          if python -m pip install ".[docs]"; then
            echo "Installed project with docs extras"
          else
            echo "Failed to install '.[docs]', trying 'python -m pip install .'"
            if python -m pip install .; then
              echo "Installed project (without docs extras)"
            else
              echo "Failed to install project from pyproject.toml; installing mkdocs (+ common plugins) explicitly"
              python -m pip install mkdocs mkdocs-material mkdocs-kroki-plugin mkdocs-include-markdown-plugin mkdocs-macros-plugin
            fi
          fi

      - name: "Debug: confirm mkdocs presence"
        shell: bash
        run: |
          set -euo pipefail
          echo "PATH=$PATH"
          echo "mkdocs binary:"
          command -v mkdocs || true
          echo "mkdocs --version (may fail if mkdocs not installed)"
          mkdocs --version || true
          echo "Installed packages (top):"
          python -m pip list --disable-pip-version-check | head -n 50 || true

      - name: Deploy MkDocs site
        env:
          KROKI_SERVER_URL: http://kroki:8000
        shell: bash
        run: |
          set -euo pipefail
          if ! command -v mkdocs >/dev/null 2>&1; then
            echo "ERROR: mkdocs not found on PATH. Aborting. See debug output above."
            exit 1
          fi
          mkdocs gh-deploy --force
