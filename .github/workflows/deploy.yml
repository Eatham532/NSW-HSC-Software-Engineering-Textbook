name: Deploy Docs

on:
  push:
    branches:
      - master
      - main
  workflow_dispatch:  # Allow manual triggers

# Cancel in-progress runs when new commit is pushed
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    container:
      image: python:3.13

    services:
      kroki:
        image: yuzutech/kroki
        env:
          KROKI_MERMAID_HOST: mermaid
          KROKI_BPMN_HOST: bpmn
          KROKI_EXCALIDRAW_HOST: excalidraw
        ports:
          - 8000:8000
      mermaid:
        image: yuzutech/kroki-mermaid
      bpmn:
        image: yuzutech/kroki-bpmn
      excalidraw:
        image: yuzutech/kroki-excalidraw

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for git-revision-date plugin
          sparse-checkout: |
            docs
            includes
            kroki_wrapper.py
            mermaid_wrapper.py
            pyproject.toml
            mkdocs.yml

      - name: Install project dependencies into container Python (pip from pyproject)
        shell: bash
        run: |
          set -euo pipefail
          echo "Python: $(python --version)"

          # Ensure pip and build tools are available
          python -m pip install --upgrade pip setuptools wheel

          # Install project with docs extras (falls back if needed)
          echo "Attempting: python -m pip install '.[docs]'"
          if python -m pip install ".[docs]"; then
            echo "✅ Installed project with docs extras"
          else
            echo "⚠️ Failed to install '.[docs]', trying 'python -m pip install .'"
            if python -m pip install .; then
              echo "✅ Installed project (without docs extras)"
            else
              echo "❌ Failed to install project from pyproject.toml; installing mkdocs explicitly"
              python -m pip install mkdocs mkdocs-material mkdocs-kroki-plugin mkdocs-include-markdown-plugin mkdocs-macros-plugin mkdocs-awesome-pages-plugin
            fi
          fi

      - name: Verify MkDocs installation
        shell: bash
        run: |
          set -euo pipefail
          if ! command -v mkdocs >/dev/null 2>&1; then
            echo "❌ ERROR: mkdocs not found on PATH"
            exit 1
          fi
          echo "✅ MkDocs found: $(command -v mkdocs)"
          echo "📦 MkDocs version:"
          mkdocs --version
          echo ""
          echo "📦 Installed packages (first 30):"
          python -m pip list --disable-pip-version-check | head -n 30

      - name: Build MkDocs site
        env:
          KROKI_SERVER_URL: http://kroki:8000
        shell: bash
        run: |
          set -euo pipefail
          echo "🔨 Building MkDocs site..."
          mkdocs build --strict --verbose
          echo "✅ Build completed successfully"

      - name: Deploy to GitHub Pages
        env:
          KROKI_SERVER_URL: http://kroki:8000
        shell: bash
        run: |
          set -euo pipefail
          echo "🚀 Deploying to GitHub Pages..."
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          mkdocs gh-deploy --force --verbose
          echo "✅ Deployment completed successfully"
